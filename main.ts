namespace SpriteKind {
    export const Blocker = SpriteKind.create()
}
scene.onOverlapTile(SpriteKind.Player, assets.tile`myTile0`, function (sprite, location) {
    game.over(false)
})
scene.onOverlapTile(SpriteKind.Player, assets.tile`myTile1`, function (sprite, location) {
    game.over(true)
})
controller.up.onEvent(ControllerButtonEvent.Pressed, function () {
    if (characterAnimations.matchesRule(mySprite, characterAnimations.rule(Predicate.HittingWallDown)) && statusbar.value > 0) {
        mySprite.vy = -130
        statusbar.value += -10
    }
})
controller.B.onEvent(ControllerButtonEvent.Pressed, function () {
    if (statusbar.value > 0) {
        mySprite.vy = -200
        statusbar.value += -20
    }
})
function MoveEnemy (mySprite: Sprite) {
    forever(function(){
    if (mySprite.isHittingTile(CollisionDirection.Left) || mySprite.isHittingTile(CollisionDirection.Right) || (mySprite.isHittingTile(CollisionDirection.Top) || mySprite.isHittingTile(CollisionDirection.Bottom))) {
        if (Math.percentChance(25)) {
            mySprite.vx = 50
        } else if (Math.percentChance(33.33)) {
            mySprite.vx = -50
        } else if (Math.percentChance(50)) {
            mySprite.vy = 50
        } else {
            mySprite.vy = -50
        }
    }
}
    )
}
controller.A.onEvent(ControllerButtonEvent.Pressed, function () {
    if (Right) {
        projectile = sprites.createProjectileFromSprite(img`
            . . . . . . 
            . . . . . . 
            e . . . e . 
            e e e e e e 
            e . . . e . 
            . . . . . . 
            . . . . . . 
            `, mySprite, 200, 0)
        music.knock.play()
        projectile.setKind(SpriteKind.Projectile)
    }
    if (Left) {
        projectile = sprites.createProjectileFromSprite(img`
            . . . . . . 
            . . . . . . 
            . e . . . e 
            e e e e e e 
            . e . . . e 
            . . . . . . 
            . . . . . . 
            `, mySprite, -200, 0)
        music.knock.play()
        projectile.setKind(SpriteKind.Projectile)
    }
})
sprites.onOverlap(SpriteKind.Enemy, SpriteKind.Projectile, function (sprite, otherSprite) {
    sprite.destroy(effects.ashes, 500)
    otherSprite.destroy()
    info.changeScoreBy(1)
})
controller.down.onEvent(ControllerButtonEvent.Pressed, function () {
    if (Build > 0) {
        if (mySprite.tileKindAt(TileDirection.Top, assets.tile`myTile`)) {
            game.over(false)
        }
        Loc = mySprite.tilemapLocation()
        tiles.setTileAt(Loc, assets.tile`myTile`)
        tiles.setWallAt(Loc, true)
        mySprite.y += -16
        Build += -1
    }
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Food, function (sprite, otherSprite) {
    tiles.placeOnRandomTile(otherSprite, assets.tile`transparency16`)
    Build += 10
    statusbar.value = 100
})
scene.onHitWall(SpriteKind.Projectile, function (sprite, location) {
    tiles.setTileAt(location, assets.tile`transparency16`)
    tiles.setWallAt(location, false)
    sprite.destroy()
    Build += 1
})
function CreateEnemy (Col: number, Row: number) {
    Enemy1 = sprites.create(img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `, SpriteKind.Enemy)
    animation.runImageAnimation(
    Enemy1,
    [img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . 4 2 . . . . . . . 
        . . . . . . 4 4 4 2 . . . . . . 
        . . . . . 4 4 4 4 4 2 . . . . . 
        . . . . . 4 f 4 4 f 2 . . . . . 
        . . . . 4 4 f 4 4 f 4 2 . . . . 
        . . . . 4 4 4 4 4 4 4 2 . . . . 
        . . . 4 4 4 4 4 4 4 4 4 2 . . . 
        . . 4 4 4 4 f f f f 4 4 4 2 . . 
        . 4 4 4 4 f 4 4 4 4 f 4 4 4 2 . 
        4 4 . 4 4 f 4 4 4 4 f 4 4 4 4 2 
        4 . . 4 4 4 4 4 4 4 4 4 4 . 4 2 
        4 . . . 4 4 4 4 4 4 4 4 . . . 2 
        4 . . . . 4 4 4 4 4 4 . . . . 4 
        . . . . . . 4 4 4 4 . . . . . . 
        . . . . . . . 4 4 . . . . . . . 
        `,img`
        . . . . . . . . . . . . . . . . 
        . . . . . . . 4 2 . . . . . . . 
        . . . . . . 4 4 4 2 . . . . . . 
        . . . . . 4 4 4 4 4 2 . . . . . 
        . . . . . 4 f 4 4 f 2 . . . . . 
        . . . . 4 4 f 4 4 f 4 2 . . . . 
        . . . . 4 4 4 4 4 4 4 2 . . . . 
        . . . 4 4 4 4 4 4 4 4 4 2 . . . 
        . . 4 4 4 4 f f f f 4 4 4 2 . . 
        . . 4 4 4 f 4 4 4 4 f 4 4 2 . . 
        . 4 4 4 4 f 4 4 4 4 f 4 4 4 2 . 
        . 4 4 4 4 4 4 4 4 4 4 4 4 4 2 . 
        . 4 4 . 4 4 4 4 4 4 4 4 . 4 2 . 
        . 4 . . . 4 4 4 4 4 4 . . . 2 . 
        . 4 . . . . 4 4 4 4 . . . . 4 . 
        . . . . . . . 4 4 . . . . . . . 
        `],
    500,
    true
    )
    Enemy1.vx = -50
    MoveEnemy(Enemy1)
    tiles.placeOnTile(Enemy1, tiles.getTileLocation(Col, Row))
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.Enemy, function (sprite, otherSprite) {
    game.over(false)
})
let Enemy1: Sprite = null
let Loc: tiles.Location = null
let projectile: Sprite = null
let mySprite2: Sprite = null
let Build = 0
let statusbar: StatusBarSprite = null
let mySprite: Sprite = null
let NewX = 0
let OldX = 0
let Left = false
let Right = false
mySprite = sprites.create(assets.image`Player`, SpriteKind.Player)
controller.moveSprite(mySprite, 100, 0)
scene.setBackgroundColor(12)
tiles.setCurrentTilemap(tilemap`level0`)
statusbar = statusbars.create(20, 4, StatusBarKind.Energy)
statusbar.setStayInScreen(true)
statusbar.setColor(7, 2)
statusbar.attachToSprite(mySprite)
statusbar.max = 100
Left = false
Right = false
info.setScore(0)
Build = 0
CreateEnemy(28, 5)
CreateEnemy(28, 5)
CreateEnemy(28, 4)
CreateEnemy(8, 29)
CreateEnemy(16, 2)
CreateEnemy(20, 16)
CreateEnemy(2, 2)
CreateEnemy(9, 18)
CreateEnemy(25, 4)
CreateEnemy(1, 1)
CreateEnemy(15, 19)
CreateEnemy(6, 23)
for (let index = 0; index < 2; index++) {
    mySprite2 = sprites.create(img`
        . . b b b b b b b b b b b b . . 
        . b e 4 4 4 4 4 4 4 4 4 4 e b . 
        b e 4 4 4 4 4 4 4 4 4 4 4 4 e b 
        b e 4 4 4 4 4 4 4 4 4 4 4 4 e b 
        b e 4 4 4 4 4 4 4 4 4 4 4 4 e b 
        b e e 4 4 4 4 4 4 4 4 4 4 e e b 
        b e e e e e e e e e e e e e e b 
        b e e e e e e e e e e e e e e b 
        b b b b b b b d d b b b b b b b 
        c b b b b b b c c b b b b b b c 
        c c c c c c b c c b c c c c c c 
        b e e e e e c b b c e e e e e b 
        b e e e e e e e e e e e e e e b 
        b c e e e e e e e e e e e e c b 
        b b b b b b b b b b b b b b b b 
        . b b . . . . . . . . . . b b . 
        `, SpriteKind.Food)
    tiles.placeOnRandomTile(mySprite2, assets.tile`transparency16`)
}
game.onUpdateInterval(30, function () {
    mySprite.vy += 5
})
forever(function () {
    music.playMelody("C E D C C5 C - - ", 120)
})
forever(function () {
    statusbar.positionDirection(CollisionDirection.Top)
    scene.cameraFollowSprite(mySprite)
    characterAnimations.loopFrames(
    mySprite,
    [img`
        ..............ffffff....
        .............f2feeeeff..
        ............f222feeeeff.
        ............feeeeffeeef.
        ...........fe2222eeffff.
        ...........f2effff222ef.
        .........eecffeeefffffff
        ........ee...e44fbe44eff
        ........e....eddf14d4eef
        ........eeeecdeddd4eeef.
        ........e..edd4e44eeff..
        ........ee..ee442222f...
        .........ee..f2e2222f...
        .............f554444f...
        ..............ffffff....
        ................fff.....
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        `,img`
        ........................
        ..............fff.......
        .............f2fffff....
        ...........ff22eeeeeff..
        ..........ff222eeeeeeff.
        ..........feeeefffeeeef.
        .........fe2222eeefffff.
        .........f2efffff222efff
        .......eefffeeefffffffff
        ......ee.fee44fbbe44efef
        ......e...feddfbb4d4eef.
        ......eeeeefddddd4eeef..
        ......e...dee2222222f...
        ......ee..d44e544444f...
        .......ee.dedffffffff...
        .............ff...fff...
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        `,img`
        ...............ff.......
        .............ff2ffff....
        ............ff2feeeeff..
        ...........ff22feeeeeff.
        ...........feeeeffeeeef.
        ..........fe2222eefffff.
        ..........f2effff222efff
        ..........fffeeeffffffff
        ........eefee44fbe44efef
        .......ee..feddfb4d4eef.
        .......e....eeddd4eeef..
        .......eeeeeddee2222f...
        .......e...edd44e444f...
        .......ee...eeeefffff...
        ........ee....ffffffff..
        ...............ff..fff..
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        `,img`
        ..............ffffff....
        .............f2feeeeff..
        ............f222feeeeff.
        ............feeeeffeeef.
        ...........fe2222eeffff.
        ...........f2effff222ef.
        ...........fffeeefffffff
        ...........fee44fbe44eff
        .........ee.feddf14d4eef
        ........ee...fdddd4eeef.
        ........e....fe444eddf..
        ........eeeedefe22eddf..
        ........e...ecfe22fee...
        ........ee....fc4444f...
        .........ee....fffff....
        ................fff.....
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        `],
    100,
    characterAnimations.rule(Predicate.MovingLeft)
    )
    characterAnimations.loopFrames(
    mySprite,
    [img`
        ....ffffff..............
        ..ffeeeef2f.............
        .ffeeeef222f............
        .feeeffeeeef............
        .ffffee2222ef...........
        .fe222ffffe2f...........
        fffffffeeeffcee.........
        ffe44ebf44e...ee........
        fee4d41fdde....e........
        .feee4dddedceeee........
        ..ffee44e4dde..e........
        ...f222244ee..ee........
        ...f2222e2f..ee.........
        ...f444455f.............
        ....ffffff..............
        .....fff................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        `,img`
        ........................
        .......fff..............
        ....fffff2f.............
        ..ffeeeee22ff...........
        .ffeeeeee222ff..........
        .feeeefffeeeef..........
        .fffffeee2222ef.........
        fffe222fffffe2f.........
        fffffffffeeefffee.......
        fefe44ebbf44eef.ee......
        .fee4d4bbfddef...e......
        ..feee4dddddfeeeee......
        ...f2222222eed...e......
        ...f444445e44d..ee......
        ...ffffffffded.ee.......
        ...fff...ff.............
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        `,img`
        .......ff...............
        ....ffff2ff.............
        ..ffeeeef2ff............
        .ffeeeeef22ff...........
        .feeeeffeeeef...........
        .fffffee2222ef..........
        fffe222ffffe2f..........
        ffffffffeeefff..........
        fefe44ebf44eefee........
        .fee4d4bfddef..ee.......
        ..feee4dddee....e.......
        ...f2222eeddeeeee.......
        ...f444e44dde...e.......
        ...fffffeeee...ee.......
        ..ffffffff....ee........
        ..fff..ff...............
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        `,img`
        ....ffffff..............
        ..ffeeeef2f.............
        .ffeeeef222f............
        .feeeffeeeef............
        .ffffee2222ef...........
        .fe222ffffe2f...........
        fffffffeeefff...........
        ffe44ebf44eef...........
        fee4d41fddef.ee.........
        .feee4ddddf...ee........
        ..fdde444ef....e........
        ..fdde22efedeeee........
        ...eef22efce...e........
        ...f4444cf....ee........
        ....fffff....ee.........
        .....fff................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        `],
    100,
    characterAnimations.rule(Predicate.MovingRight)
    )
    if (characterAnimations.matchesRule(mySprite, characterAnimations.rule(Predicate.MovingRight, Predicate.MovingUp))) {
        mySprite.setImage(img`
            ........................
            ....ffffff..............
            ..ffeeeef2f.............
            .ffeeeef222f............
            .feeeffeeeef............
            .ffffee2222ef...........
            .fe222ffffe2f...........
            fffffffeeeffcee.........
            ffe44ebf44e...ee........
            fee4d41fdde....e........
            .feee4ddded.eeee........
            ..ffee44e4dddc.e........
            ...f222244ee..ee........
            ...f2222e2f..ee.........
            ...f444455f.............
            ....ffffff..............
            .....fff................
            ........................
            ........................
            ........................
            ........................
            ........................
            ........................
            ........................
            `)
    }
    if (characterAnimations.matchesRule(mySprite, characterAnimations.rule(Predicate.MovingLeft, Predicate.MovingUp))) {
        mySprite.setImage(img`
            ........................
            ..............ffffff....
            .............f2feeeeff..
            ............f222feeeeff.
            ............feeeeffeeef.
            ...........fe2222eeffff.
            ...........f2effff222ef.
            .........eecffeeefffffff
            ........ee...e44fbe44eff
            ........e....eddf14d4eef
            ........eeee.deddd4eeef.
            ........e.cddd4e44eeff..
            ........ee..ee442222f...
            .........ee..f2e2222f...
            .............f554444f...
            ..............ffffff....
            ................fff.....
            ........................
            ........................
            ........................
            ........................
            ........................
            ........................
            ........................
            `)
    }
    if (characterAnimations.matchesRule(mySprite, characterAnimations.rule(Predicate.MovingRight))) {
        Right = true
        Left = false
    }
    if (characterAnimations.matchesRule(mySprite, characterAnimations.rule(Predicate.MovingLeft))) {
        Left = true
        Right = false
    }
})
